name: Sync translations

on:
  workflow_dispatch:
    inputs:
      keys:
        description: "Comma-separated list of keys that require translation."
        required: true
        default: key1
      target_languages:
        description: "Comma-separated list of target languages (e.g., es, fr, de)."
        required: false
        default: "sv"
  push:
    branches:
      - main

jobs: 
  process-translation-keys:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: List localisation files
        run: ls -R ./src/resources/locale/

      - name: Set Git variables
        id: git_variables
        run: |
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"

          echo "Git variables
          echo "REPO=$REPO"
          echo "BRANCH=$BRANCH

          echo "REPO=$REPO" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

          echo "Set git variables"

      - name: Set default inputs
        if: github.event_name == 'push'
        id: default_inputs
        run: |
          JSON_MAP=$(echo '{"key1":"value1"}' | jq -c .)
          TARGET_LANGUAGES="sv"

          echo "Sets default inputs"
          echo "JSON_MAP=$JSON_MAP"
          echo "TARGET_LANGUAGES=$TARGET_LANGUAGES"
          
          echo "JSON_MAP=$JSON_MAP" >> $GITHUB_ENV
          echo "TARGET_LANGUAGES=$TARGET_LANGUAGES" >> $GITHUB_ENV

          echo "Set default inputs"

      - name: Extract Inputs
        if: github.event_name == 'workflow_dispatch'
        id: extract_inputs
        run: |
          KEYS="${{ github.event.inputs.keys }}"
          TARGET_LANGUAGES="${{ github.event.inputs.target_languages }}"

          echo "Keys: $KEYS"

          # Convert the keys to a JSON array
          KEY_ARRAY=$(echo $KEYS | jq -R 'split(",")')
          echo "Key array: $KEY_ARRAY"

          # Extract the English strings for the specified keys from the locale file
          # JSON_MAP=$(jq -c --argjson keys "$KEY_ARRAY" '
          #  reduce $keys[] as $key ({}; .[$key] = .[$key])
          #' ./src/resources/locale/en.json)

          # TEMP JSON MAP
          JSON_MAP=$(echo '{"key1":"value1"}' | jq -c .)
          echo "JSON_MAP=$JSON_MAP" >> $GITHUB_ENV
          echo "TARGET_LANGUAGES=$TARGET_LANGUAGES" >> $GITHUB_ENV

      - name: Build JSON payload
        id: build_payload
        run: |
          # Construct the JSON payload
          JSON_PAYLOAD=$(jq -n \
            --arg keys "$(echo '${{ toJson(env.JSON_MAP) }}')" \
            --arg repo "${REPO}" \
            --arg branch "${BRANCH}" \
            --arg target_languages "${TARGET_LANGUAGES}" \
            '{event_type: "create_translation_task", client_payload: {keys: ($keys | fromjson), repository: $repo, branch: $branch, target_languages: $target_languages}}')
          
          # Save the payload to a file
          echo "$JSON_PAYLOAD" > payload.json

          # Print the payload for debugging
          cat payload.json
  
      - name: Trigger Translation Workflow in Translation Repo
        run: |
          echo "Payload:"
          echo "{"event_type": "create_translation_task", "client_payload": {"keys": $(echo '${{ toJson(env.JSON_MAP) }}'), "repository": "${REPO}", "branch": "${BRANCH}", "target_languages": "${TARGET_LANGUAGES}"}}"
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.REPO_PAT }}" \
            https://api.github.com/repos/ludjan/provides-translation-test/dispatches \
            -d '{"event_type": "create_translation_task", "client_payload": {"keys": $(echo '${{ toJson(env.JSON_MAP) }}'), "repository": "${REPO}", "branch": "${BRANCH}", "target_languages": "${TARGET_LANGUAGES}"}}'
