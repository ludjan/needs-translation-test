name: Sync translations

on:
  workflow_dispatch:
    inputs:
      keys:
        description: "Comma-separated list of keys that require translation."
        required: true
        default: key1
      target_languages:
        description: "Comma-separated list of target languages (e.g., es, fr, de)."
        required: false
        default: "sv"
  push:
    branches:
      - master

jobs: 
  process-translation-keys:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: List localisation files
        run: ls -R ./src/resources/locale/

      - name: Extract Inputs
        id: extract_inputs
        run: |
          KEYS="${{ github.event.inputs.keys }}"
          TARGET_LANGUAGES="${{ github.event.inputs.target_languages }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref_name }}"

          echo "Keys: $KEYS"

          # Convert the keys to a JSON array
          KEY_ARRAY=$(echo $KEYS | jq -R 'split(",")')
          echo "Key array: $KEY_ARRAY"

          # Extract the English strings for the specified keys from the locale file
          # JSON_MAP=$(jq -c --argjson keys "$KEY_ARRAY" '
          #  reduce $keys[] as $key ({}; .[$key] = .[$key])
          #' ./src/resources/locale/en.json)

          # TEMP JSON MAP
          JSON_MAP=$(echo '{"key1":"value1"}' | jq -c .)
          
          echo "JSON_MAP=$JSON_MAP" >> $GITHUB_ENV
          echo "REPO=$REPO" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "TARGET_LANGAUGES=$TARGET_LANGUAGES" >> $GITHUB_ENV

      - name: Trigger Translation Workflow in Translation Repo
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/ludjan/provides-translation-test/dispatches \
            -d '{"event_type": "create_translation_task", "client_payload": {{"keys": ${{ toJson(env.JSON_MAP) }}, "repository": "${REPO}", "branch": "${BRANCH}", "target_languages": "${TARGET_LANGUAGES}"}}'
